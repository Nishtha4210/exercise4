class Stack {
  constructor() {
    this.items = [];
    this.top = -1;
  }

  push(element) {
    this.top++; 
    this.items[this.top] = element;
  }

  pop() {
    if (this.top < 0) {
      console.log("Stack is underflow");
      return undefined;
    } else {
      let poppedElement = this.items[this.top];
      this.top--;
      return poppedElement;
    }
  }

  peek() {
    if (this.top < 0) {
      console.log("Stack is Empty");
      return undefined;
    }
    return this.items[this.top];
  }

  isEmpty() {
    return this.top < 0;
  }
}

let stack = new Stack();
stack.push(1);
stack.push(2);
stack.push(3);
stack.push(4);

console.log(stack.pop());

//with object

class Stack {
  constructor() {
    this.items = {}; // object
    this.top = -1; // this.top = key
  }

  push(element) {
    this.top++; 
    this.items[this.top] = element;
  }

  pop() {
    if (this.isEmpty()) {
      console.log("Stack is underflow");
      return undefined;
    }

    let poppedElement = this.items[this.top];
    delete this.items[this.top];
    this.top--;
    return poppedElement;
  }

  peek() {
    if (this.isEmpty()) {
      console.log("Stack is Empty");
      return undefined;
    }
    return this.items[this.top];
  }

  isEmpty() {
    return this.top < 0;
  }
}
let stack = new Stack();
stack.push(1);
stack.push(2);
stack.push(3);
stack.push(4);

console.log(stack.pop());
